"""
Django settings for gestPartenaire project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from  decouple import config
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'jazzmin', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'Recap',
    'django.contrib.humanize',
    'django_crontab',
    'django_apscheduler',
    'widget_tweaks',
]

AUTH_USER_MODEL = 'Recap.User'

import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

JAZZMIN_SETTINGS = {
    "site_title": "Gestion des Partenaires",
    "site_header": "Administration gestPartenaire",
    "site_brand": "gestPartenaire",
    "welcome_sign": "Bienvenue dans l‚Äôespace d‚Äôadministration",
    "copyright": "¬© 2025 Plateforme Partenaires",

    # üé® Th√®me
    "site_logo": None,  # tu peux mettre ton logo ici si tu en as un
    "site_logo_classes": "img-circle",
    "login_logo": None,
    "login_logo_dark": None,
    "show_ui_builder": False,

    # üìå Navigation
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],

    # üîç Recherche rapide
    "search_model": ["Recap.User", "Recap.Activite", "Recap.RecapMensuel"],

    # üöÄ Liens menu haut
    "topmenu_links": [
        {"name": "Accueil", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"app": "Recap"},
    ],

    # üéØ Ic√¥nes par mod√®le
    "icons": {
        "Recap.user": "fas fa-users",
        "Recap.activite": "fas fa-list-alt",
        "Recap.recapmensuel": "fas fa-file-pdf",
        "Recap.facturepartenaire": "fas fa-file-invoice",
        "Recap.paiementcommission": "fas fa-hand-holding-usd",
    },

    # üìä Mode liste
    "order_with_respect_to": ["Recap", "auth", "sessions"],

    # üé® Couleurs personnalis√©es
    "custom_css": None,
    "custom_js": None,
    "show_ui_builder": False,

     "custom_css": "css/custom.css",
     "custom_js": "js/custom.js", 
}

CRONJOBS = [
    # Tous les 1er du mois √† 00h10 ‚Üí g√©n√®re les r√©cap du mois pr√©c√©dent
    ('10 0 1 * *', 'Recap.cron.generer_recaps'),
]

ROOT_URLCONF = 'gestPartenaire.urls'

LOGIN_URL = 'login'   # correspond au name="login" dans urls.py
LOGIN_REDIRECT_URL = 'dashboard'  # o√π rediriger apr√®s connexion r√©ussie
LOGOUT_REDIRECT_URL = 'login'  # o√π rediriger apr√®s d√©connexion

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestPartenaire.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

DATABASES = {
    'default': dj_database_url.parse(config('DATABASE_URL'))
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Africa/Porto-Novo'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
